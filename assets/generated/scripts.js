"use strict";
'use strict';

var Accordion = {
	elements: function elements() {
		this.accordions = document.querySelectorAll('.faq__accordion-panel');
	},
	handler: function handler(element) {

		if (element.classList.contains('active')) {
			element.classList.remove('active');
		} else {
			for (var i = 0; i < this.accordions.length; i++) {
				this.accordions[i].classList.remove('active');
			}
			element.classList.add('active');
		}
	},

	init: function init() {
		var _this = this;

		this.elements();
		this.accordions.forEach(function (accordion) {
			return accordion.addEventListener('click', function () {
				return _this.handler(accordion);
			});
		});
	}
};

Accordion.init();
'use strict';

function goBack(e) {
	e.preventDefault();
	window.history.back();
}

var backbutton = document.querySelector('.faq__app-back');
backbutton.addEventListener('click', function (e) {
	return goBack(e);
});
'use strict';

var Slider = {
	transformIncrementCircles: 115,
	currentIndex: 0,
	previousCount: 0,
	nextCount: 0,

	elements: function elements() {
		this.slides = document.querySelectorAll('.faq__slider-item');
		this.slidesLength = this.slides.length;
		this.titles = document.querySelectorAll('.faq__title');
		this.accordionsWrapper = document.querySelector('.faq__container > article');
		this.accordions = this.accordionsWrapper.querySelectorAll('.faq__accordion');
	},
	setElements: function setElements() {
		for (var i = 0; i < this.slidesLength; i++) {
			this.titles[i].style.flexBasis = 100 * (1 / this.slidesLength) + '%';
			this.titles[i].style.maxWidth = 100 * (1 / this.slidesLength) + '%';
			this.accordions[i].style.flexBasis = 100 * (1 / this.slidesLength) + '%';
			this.accordions[i].style.maxWidth = 100 * (1 / this.slidesLength) + '%';
		}
	},
	switchSlide: function switchSlide(element) {
		this.currentIndex = parseInt(element.dataset.page - 1);
		element.classList.add('active');
		element.style.transform = null;

		/* GET PREVIOUS SIBLINGS */
		for (var i = this.currentIndex - 1; i >= 0; i--) {
			this.previousCount++;
			this.slides[i].classList.remove('active');
			this.slides[i].style.transform = 'translateX(-' + this.previousCount * this.transformIncrementCircles + '%)';
		}

		/* GET NEXT SIBLINGS */
		for (var _i = this.currentIndex + 1; _i < this.slidesLength; _i++) {
			this.nextCount++;
			this.slides[_i].classList.remove('active');
			this.slides[_i].style.transform = 'translateX(' + this.nextCount * this.transformIncrementCircles + '%)';
		}

		this.previousCount = 0;
		this.nextCount = 0;
	},
	switchContainer: function switchContainer() {
		this.titles[0].parentNode.style.transform = 'translateX(-' + this.currentIndex * (100 / this.slidesLength) + '%)';
		this.accordionsWrapper.style.transform = 'translateX(-' + this.currentIndex * (100 / this.slidesLength) + '%)';
		for (var i = 0; i < this.slidesLength; i++) {
			this.accordions[i].classList.remove('active');
		}
		this.accordions[this.currentIndex].classList.add('active');
	},
	prepareContainer: function prepareContainer() {
		/* set width depending on the count of slides */
		this.titles[0].parentNode.style.width = this.slidesLength * 100 + '%';
		this.accordionsWrapper.style.width = this.slidesLength * 100 + '%';
	},


	init: function init() {
		var _this = this;

		this.elements();
		this.prepareContainer();
		this.setElements();
		this.slides.forEach(function (slide) {
			return slide.addEventListener('click', function () {
				_this.switchSlide(slide);
				_this.switchContainer();
			});
		});
	}
};

Slider.init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
